package cngblob

import (
	"github.com/wat4r/dpapitk/utils"
	"reflect"
	"testing"
)

func TestDecryptWithMasterKey(t *testing.T) {
	type args struct {
		blobData  []byte
		masterKey []byte
		entropy   []byte
	}
	tests := []struct {
		name    string
		args    args
		want    []byte
		wantErr bool
	}{
		{
			name: "cng_dpapi_01",
			args: struct {
				blobData  []byte
				masterKey []byte
				entropy   []byte
			}{
				blobData:  utils.HexToBytes("308201df06092a864886f70d010703a08201d0308201cc0201023182017aa2820176020104308201380482010601000000d08c9ddf0115d1118c7a00c04fc297eb01000000f2978bcd75c89e4e85d8bb8d73954e5000000000020000000000106600000001000020000000697e551c41cdcf845ce75767f953f9c6510bbaf35cab772718fb50583a307a9c000000000e8000000002000020000000867a73a333b53f480d639ebfd9ee33aa4d33722a619bd5137199da8143dae81e300000009762fa78b7d0f4d06cf07afe413a22ba523eabdddfb16509670da1129266cb898eaa5477f74a8895caa9bd90ec05f6d340000000627c12bb5b88c4ad354c30a546f1adb1da48a07e26d68fad0f13411303261b7c9356d49a32345b15b5f3215c8c849407e3463797e83919386ac5ed12a54add60302c06092b0601040182374a01301f060a2b0601040182374a01083011300f300d0c054c4f43414c0c0475736572300b060960864801650304012d04281fbfc48959e32cbfcb27ba11529efd16ff570b5f3851f73ad9958d08c6570ca4fb8fcb3fb7a0773c304906092a864886f70d010701301e060960864801650304012e3011040cc6ab579aae394e82b0706745020110801c2609c2e969e05ca3f60a3d4ad3d60b3efb4c93df05573102818ce250"),
				masterKey: utils.HexToBytes("0c3f3b7ce13d5e196271c4b640165223edd6e7aa6010b15fa8d4fc128b75b871f8102d9c114429c7861c9cfeb0202e13f82483378b958b169920716b04d8a765"),
				entropy:   nil,
			},
			want: utils.HexToBytes("68656c6c6f20776174347221"),
		},
		{
			name: "cng_dpapi_02",
			args: struct {
				blobData  []byte
				masterKey []byte
				entropy   []byte
			}{
				blobData:  utils.HexToBytes("308201da06092a864886f70d010703a08201cb308201c70201023182017aa2820176020104308201380482010601000000d08c9ddf0115d1118c7a00c04fc297eb01000000f2978bcd75c89e4e85d8bb8d73954e500000000002000000000010660000000100002000000043bfbb5ea197a686d43c28f7863b8038a457ef1748bba26b99470f2028a7b4bc000000000e8000000002000020000000c61bc83ea1c52a8174ea7b8e584646948a67eda38da62b2a50e3ba25a81e790130000000acef73093a83587f836949fb59aff007923cf8bdc639b11ba2ac2fe9376efce3e8112722b4a0113f6b2ba8e764e6cab240000000af81327c3217e4205747718350236a8e916407fe4fe7a0007300b4d4f04f0e9778d0099a76b8db7d7af069f11234cf416fd1b4612b7d32eb95a6a261a8f961b2302c06092b0601040182374a01301f060a2b0601040182374a01083011300f300d0c054c4f43414c0c0475736572300b060960864801650304012d04284e7472c5e9423e2a59e09a0ff504efda22aee897d5e8d225c42574270db538f79f490f28f3bb71fb304406092a864886f70d010701301e060960864801650304012e3011040c9484a5353dfab3e57dfc4ed40201108017be83e239df5e971275602acf5e51dae3782bfa755f4ad8"),
				masterKey: utils.HexToBytes("0c3f3b7ce13d5e196271c4b640165223edd6e7aa6010b15fa8d4fc128b75b871f8102d9c114429c7861c9cfeb0202e13f82483378b958b169920716b04d8a765"),
				entropy:   nil,
			},
			want: utils.HexToBytes("6470617069636b"),
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := DecryptWithMasterKey(tt.args.blobData, tt.args.masterKey, tt.args.entropy)
			if (err != nil) != tt.wantErr {
				t.Errorf("DecryptWithMasterKey() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("DecryptWithMasterKey() got = %v, want %v", got, tt.want)
			}
		})
	}
}
